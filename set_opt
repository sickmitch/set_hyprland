#!/bin/bash

clear

read -rep $'[\e[1;33mACTION\e[0m] - Would you like to setup pulseaudio? (y,n) ' PULSE
read -rep $'[\e[1;33mACTION\e[0m] - Would you like to install sddm as display manager? (y,n) ' SDDM
read -rep $'[\e[1;33mACTION\e[0m] - Would you like to install and set nvim? (y,n) ' NVIM
read -rep $'[\e[1;33mACTION\e[0m] - Would you like to rice hyprland? (y,n) ' RICE
read -rep $'[\e[1;33mACTION\e[0m] - Would you like to set spotify ad-block? (y,n) ' SPOT
read -rep $'[\e[1;33mACTION\e[0m] - Would you like to set bash? (y,n) ' BASH

#Set pulseaudio
if [[ $PULSE == "Y" || $PULSE == "y" ]]; then
	echo -en "$CNT - Configuering pulseaudio."
	pkill pulseaudio
	pulseaudio -D
	mkdir -p $HOME/.config/systemd/user/default.target.wants/
	mkdir -p $HOME/.config/systemd/user/sockets.target.wants/
	sudo ln -s /usr/lib/systemd/user/pulseaudio.service $HOME/.config/systemd/user/default.target.wants/pulseaudio.service
	sudo ln -s /usr/lib/systemd/user/pulseaudio.socket $HOME/.config/systemd/user/sockets.target.wants/pulseaudio.socket
fi

#Set login manager
if [[ $SDDM == "Y" || $SDDM == "y" ]]; then
	install_software sddm
	LOC="/etc/sddm.conf"
	echo -e "The following has been added to $LOC.\n"
	echo -e "[Autologin]\nUser = $(whoami)\nSession=hyprland" | sudo tee -a $LOC
	echo -e "\n"
	echo -e "Enabling SDDM service...\n"
	sudo systemctl enable sddm
	sleep 3
fi

#Nvim lazyvim
if [[ $NVIM == "Y" || $NVIM == "y" ]]; then
	sudo pacman -Syu
	sudo pacman -S neovim ripgrep fd
	echo -e "Backing up..\n"
	mv ~/.config/nvim ~/.config/nvim.bak
	mv ~/.local/share/nvim ~/.local/share/nvim.bak
	mv ~/.local/state/nvim ~/.local/state/nvim.bak
	mv ~/.cache/nvim ~/.cache/nvim.bak
	git clone https://github.com/LazyVim/starter ~/.config/nvim
	rm -rf ~/.config/nvim/.git
	echo -e "Remember to run :checkhealth at first nvim start\n"
fi

#Ricing
if [[ $RICE == "Y" || $RICE == "y" ]]; then
	git clone https://github.com/sickmitch/dotfiles.git
	mkdir -p $HOME/.config
	cp -r dotfiles/* $HOME/.config
	rm -rf dotfiles
fi

#ad-block
if [[ $SPOT == "Y" || $SPOT == "y" ]]; then
	git clone https://github.com/abba23/spotify-adblock.git
	cd spotify-adblock
	make
	sudo make install
	cd ..
	rm -rf spotify-adblock
fi

#Bash Setup
if [[ $BASH == "Y" || $BASH == "y" ]]; then
	checkEnv() {
		## Check if the current directory is writable.
		GITPATH="$(dirname "$(realpath "$0")")"
		if [[ ! -w ${GITPATH} ]]; then
			echo -e "${RED}Can't write to ${GITPATH}${RC}"
			exit 1
		fi
		## Check for requirements.
		REQUIREMENTS='curl yay sudo'
		if ! which ${REQUIREMENTS} >/dev/null; then
			echo -e "${RED}To run me you need: ${REQUIREMENTS}${RC}"
			exit 1
		fi
		## Check if member of the wheel group.
		if ! groups | grep wheel >/dev/null; then
			echo -e "${RED}You need to be a member of the wheel to run me!"
			exit 1
		fi
	}
	installDepend() {
		## Check for dependencies.
		# For some reason, if I put autojump in the original DEPENDENCIES variable,
		# it skips the installation and just does bash and bash completion. So I
		# put autojump in a separate variable and separate yay command.
		DEPENDENCIES1='bash bash-completion'
		DEPENDENCIES2='autojump'
		DEPENDENCIES2='autojump-git'
		echo -e "${YELLOW}Installing dependencies...${RC}"
		yay -S ${DEPENDENCIES1}
		yay -S ${DEPENDENCIES2}
		yay -S ${DEPENDENCIES3}
		sudo mkdir -r /usr/local/bin/autojump
		sudo ln -s /etc/profile.d/autojump.sh /usr/share/autojump/autojump.sh
	}
	Ã¬nstallStarship() {
		if ! curl -sS https://starship.rs/install.sh | sh; then
			echo -e "${RED}Something went wrong during starship install!${RC}"
			exit 1
		fi
	}
	linkConfig() {
		## Check if a bashrc file is already there.
		OLD_BASHRC="${HOME}/.bashrc"
		if [[ -e ${OLD_BASHRC} ]]; then
			echo -e "${YELLOW}Moving old bash config file to ${HOME}/.bashrc.bak${RC}"
			if ! mv ${OLD_BASHRC} ${HOME}/.bashrc.bak; then
				echo -e "${RED}Can't move the old bash config file!${RC}"
				exit 1
			fi
		fi
		echo -e "${YELLOW}Linking new bash config file...${RC}"
		## Make symbolic link.
		ln -svf ${GITPATH}/.bashrc ${HOME}/.bashrc
		ln -svf ${GITPATH}/starship.toml ${HOME}/.config/starship.toml

		checkEnv
		installDepend
		installStarship
		if linkConfig; then
			echo -e "${GREEN}Done!\nrestart your shell to see the changes.${RC}"
		else
			echo -e "${RED}Something went wrong!${RC}"
		fi
	}
fi
